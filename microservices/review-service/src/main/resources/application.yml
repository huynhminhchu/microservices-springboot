server:
  port: 7003
# Strongly recommend to set this property to "none" in a production environment!

logging:
  level:
    root: INFO
    mc.microservices: DEBUG

#spring:
#  datasource:
#    url: jdbc:postgresql://192.168.1.99:5432/review-db
#    username: mc
#    password: Chudeptrai123
#  jpa:
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#        format_sql: true
spring:
  r2dbc:
    url: r2dbc:postgresql://192.168.1.99:5432/review-db
    username: mc
    password: Chudeptrai123
  cloud:
    stream:
      default-binder: rabbit
      bindings:
        messageProcessor-in-0:
          destination: reviews
      kafka:
        binder:
          brokers: 192.168.1.99:9092
  rabbitmq:
    host: 192.168.1.99
    port: 5672
    username: guest
    password: guest

spring.application.name: review
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres/review-db
  cloud:
    stream:
      default-binder: rabbit
      bindings:
        messageProcessor-in-0:
          destination: reviews
      kafka:
        binder:
          brokers: kafka
  rabbitmq:
    host: rabbitmq
    username: guest
    password: guest
server:
  port: 8080

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
